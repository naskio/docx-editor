name: Build and deploy Next.js site to GitHub Pages

on:
  push:
    branches: [main] # Runs on pushes targeting the default branch
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    outputs:
      HAS_PAGES: ${{ steps.has-pages.outputs.HAS_PAGES }}
    steps:
      - uses: actions/checkout@v4

      - name: Set HAS_PAGES to output
        id: has-pages
        run: echo "HAS_PAGES=$(gh api repos/${{ github.repository }} --jq .has_pages)" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set NEXT_PUBLIC_BASE_PATH to environment
        run: echo "NEXT_PUBLIC_BASE_PATH=/$(basename ${{ github.repository }})" >> $GITHUB_ENV

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'

      - name: Setup Pages
        uses: actions/configure-pages@v5
        if: github.ref == 'refs/heads/main' && steps.has-pages.outputs.HAS_PAGES == 'true'

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - run: pnpm install

      - run: pnpm test

      - run: pnpm build
        env:
          NEXT_PUBLIC_BASE_PATH: ${{ env.NEXT_PUBLIC_BASE_PATH }}
          NEXT_PUBLIC_REPOSITORY_URL: 'https://github.com/${{ github.repository }}'
          NEXT_PUBLIC_TWITTER_URL: 'https://twitter.com/naskdev'
          NEXT_PUBLIC_RENDERING_LIBRARIES: 'docxjs,mammoth.js'
          OUTPUT: 'export'

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        if: github.ref == 'refs/heads/main' && steps.has-pages.outputs.HAS_PAGES == 'true'
        with:
          path: out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && needs.build.outputs.HAS_PAGES == 'true'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
